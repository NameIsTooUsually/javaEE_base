# 配置根logger
# =号前面格式：log4j.rootLogger 是配置的key，固定写法
# =号后面格式：日志级别, 日志输出目的地名1, 日志输出目的地名1,....
# 高于等于指定级别的日志才会输出，输出到console、fileAppender这两个目的地
log4j.rootLogger=info,console,fileAppender


### 定义输出目的地1：输出到控制台，并命名为console ###
# =号前面：log4j.appender.输出目的地名称，其中目的地名称可以自定义，其他固定格式
# =号右边：对应输出源的实现类全类名
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 是否立即刷新写入
log4j.appender.console.ImmediateFlush = true
# 通过什么什么输出可以取值System.out/System.error(字体红色)
log4j.appender.console.Target=System.out
# 指定输出日志格式的实现类
# =前面：log4j.appender.输出目的地名称.layout
# =后面：布局实现类全类名
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# 指定输入日志的具体格式
log4j.appender.console.layout.ConversionPattern=%d %t %5p %c{1}:%L - %m%n


### 定义输出目的地2：输出到日志文件，并命名为fileAppender ###
# =号前面：log4j.appender.输出目的地名称，其中目的地名称可以自定义，其他固定格式
# =号右边：对应输出源的实现类全类名
log4j.appender.fileAppender=org.apache.log4j.FileAppender
# 是否立即刷新写入
log4j.appender.fileAppender.ImmediateFlush = true
# 是否追加写入
log4j.appender.fileAppender.Append=true
# 指定日志文件位置和名称
# =前面：log4j.appender.目的地名称.File
# =后面：日志文件位置和名称
log4j.appender.fileAppender.File=../log/log4j-log.log
log4j.appender.fileAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.fileAppender.layout.ConversionPattern=%d %5p %c{1}:%L - %m%n

